name: Docker Build

on:
  push:
  pull_request:
    branches: [ master ]

env:
  IMAGE: ghcr.io/joshpencheon/pseudonymisation_service
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Log in to GitHub Container Registry
      run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
    - uses: actions/checkout@v2
    - name: Build commit image
      run: docker build . --tag $IMAGE:$GITHUB_SHA --cache-from $IMAGE:latest --build-arg BUILDKIT_INLINE_CACHE=1
    - name: Setup testing network
      run: docker network create --driver bridge pseudo-net
    - name: Start Database
      run: docker run -d --name db --network pseudo-net -e POSTGRES_PASSWORD postgres
      env:
        POSTGRES_PASSWORD: password
    - name: Start App
      run: docker run -d --name pseudo-app --network pseudo-net -e DATABASE_HOST -e DATABASE_USERNAME -e DATABASE_PASSWORD -e RAILS_ENV -e RAILS_LOG_TO_STDOUT $IMAGE:$GITHUB_SHA
      env:
        DATABASE_HOST: db
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: password
        RAILS_ENV: production
        RAILS_LOG_TO_STDOUT: enabled
    - name: Prepare DB
      run: docker exec -e RAILS_ENV pseudo-app rails db:create
      env:
        RAILS_ENV: test
    - name: Run tests
      run: docker exec pseudo-app rails test
    - name: Push commit image
      run: docker push $IMAGE:$GITHUB_SHA

  push:
    runs-on: ubuntu-latest

    needs:
    - build

    if: github.ref == 'refs/heads/master'

    steps:
    - name: Log in to GitHub Container Registry
      run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
    - name: Pull commit image
      run: docker pull $IMAGE:$GITHUB_SHA
    - name: Tag latest image
      run: docker tag $IMAGE:$GITHUB_SHA $IMAGE:latest
    - name: Push latest image
      run: docker push $IMAGE:latest
